"""
写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项。斐波那契数列的定义如下：

F(0) = 0,   F(1) = 1
F(N) = F(N - 1) + F(N - 2), 其中 N > 1.
斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。

答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。

 
示例 1：

输入：n = 2
输出：1
示例 2：

输入：n = 5
输出：5

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/fei-bo-na-qi-shu-lie-lcof

如果直接使用递归的方式，则从fib(n-2)开始就会产生大量的重复计算，展开后为一个二叉树，时间复杂度为 O(2^n)， 空间复杂度为树的深度 O(n)
下面的方法则是直接使用该数列的特性，如 n的值为 n-1的值加 n-2的值，则直接循环 n次即可，时间复杂度为 O(n)，只有 a，b两个变量，空间复杂度为 O(1)
"""


class Solution:
    def fib(self, n: int) -> int:
        a, b = 0, 1
        for _ in range(n):
            a, b = b, a + b
        return a % 1000000007